<style lang="less">

</style>

<template>
    <div class="view-main">
        <Modal v-model='pictureLook'>
            <img :src="currentUrl" style="width: 80%;margin-left:10%;margin-top:30%;">
        </Modal>
        <!--列表页面-->
        <div class="list-page">
            <z-search :searchData='searchData' @getParam='getParam' @add='add'></z-search>
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th class="width-60">序号</th>
                        <th>汽车品牌</th>
                        <th>系列</th>
                        <th>车型名称</th>
                        <th>生产年份</th>
                        <th>档位</th>
                        <th>排量</th>
                        <th>版本</th>
                        <!-- <th>消费级别</th> -->
                        <th class="width-200">操作</th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for = "(item,index) in list" :key='index+"xc"'>
                        <td>{{index+1}}</td>
                        <td>{{item.brandName}}</td>
                        <td>{{item.carsName}}</td>
                        <td>{{item.carTypeName}}</td>
                        <td>{{item.produceYear}}</td>
                        <td>{{item.gear=='0'?'自动':'手动'}}</td>
                        <td>{{item.emission}}</td>
                        <td>{{item.version}}</td>
                        <!-- <td v-html='utils.resolveDec(consumptionLeveList,item.consumptionLevel)'></td> -->
                        <td>
                            <span class="btn" @click='view(item)'>查看</span>
                            <span class="btn" @click='update(item)'>编辑</span>
                            <cut @del='del(item)'></cut>
                        </td>
                    </tr>
                    <tr v-if='list.length == 0'><td colspan="9">暂无数据</td></tr>
                </tbody>
            </table>
            <z-page v-if='false' :dataSource='dataSource' @getData='getPageData'></z-page>
        </div>

        <!--添加-->
        <Modal
            v-model='addConfig.modal'
            width="45vw"
            :mask-closable='false'
            title='创建品牌'
            @on-ok = 'addSave'
        >
            <insert v-if='addConfig.modal' :name="addConfig.name" ref='add' />
            <div slot="footer">
                <Button @click="addConfig.modal=false">返回</Button>
                <Button type="primary" :loading="addConfig.loading" @click="addSave">保存</Button>
            </div>
        </Modal>

        <!--查看-->
        <Modal
            v-model='viewConfig.modal'
            width="60vw"
            :mask-closable='false'
            ok-text='确定'
            title='车型详情'
        >
            <views :detail="detail"  v-if='viewConfig.modal' :name="viewConfig.name" ref='view' />
            <div slot="footer">
                <Button @click="viewConfig.modal=false">返回</Button>
            </div>
        </Modal>


        <!--编辑-->
        <Modal
            v-model='updateConfig.modal'
            width="45vh"
            :loading='updateConfig.loading'
            :mask-closable='false'
            title='编辑品牌'
        >
            <update :detail="detail"  v-if='updateConfig.modal' :name="updateConfig.name" ref='update' />
            <div slot="footer">
                <Button @click="updateConfig.modal=false">返回</Button>
                <Button type="primary" :loading="updateConfig.loading" @click="updateSave">保存</Button>
            </div>
        </Modal>
    </div>
</template>

<script>
import {zTable,zPage,zSearch,cut} from '@/core'
import views from './sub/view.vue'
import insert from './sub/add.vue'
import update from './sub/update.vue'

export default {
    name: 'demo',
    components: {
        zPage,zSearch,views,insert,cut,update
    },
    data () {
        return {
            carTypeGetByBrand:[],
            consumptionLeveList:{},
            currentBrandId:-999,
            currentCarBrand:"",
            pictureLook:false,
            currentUrl:"",
            addConfig:{
               modal:false,
               name:"addConfig",
               loading:false
            },
            updateConfig:{
               modal:false,
               name:"updateConfig",
               loading:false
            },
            viewConfig:{
               modal:false,
               name:"viewConfig"
            },
            refsh:true,
            detail:{},
            dataSource:{
                url:Api.car.type.get,
                param:{brandId:21}
            },
            searchData:{
                add:true,
                source:{
                    brand:{
                        listId:"brandId",
                        listName:"brandName",
                        list:[]
                    }
                },
                list:[
                    {
                        type:"select",
                        name:"汽车品牌",
                        id:"brandId",
                        source:"brand"
                    }
                ],
                rel:{
                    brandId:""
                }
            },
            list:[]
        };
    },
    mounted () {
        this.handleInit()
        this.getData();
    },
    methods: {
        handleInit: function(){
            //获取所有车品牌
            this.get(Api.car.brand.get,(res)=>{
                this.searchData.source.brand.list = res.object || [];
            });
            //获取所有车系
            this.get(Api.car.type.getByBrand,(res)=>{
                this.carTypeGetByBrand = res.object || [];
            })
            this.consumptionLeveList = this.staticBy.car.getconsumptionLevel();
        },
        lookPic: function(url){
            this.currentUrl = url;
            this.pictureLook = true;
        },
        del: function(item){
            this.post(Api.car.type.delete,{cardTypeId:item.cardTypeId},(res)=>{
                let _this = this;
                this.$Message.success("删除成功！")
                this.getData();
            })
        },
        addSave: function(){
            this.$refs.add.save();
        },
        updateSave: function(){
            this.$refs.update.save();
        },
        //分页组件吐出数据
        getPageData: function(list){
            this.list = list.object;
        },
        getData: function(data){
            data = data || {};
            this.get(Api.car.type.get,data,(res)=>{
                this.list = res.object || [];
            })
        },
        //当筛选参数改变的时候，重新触发分页组建
        getParam: function(param){
            console.log(param);
            /*let _this = this;
            this.dataSource.param = param;
            this.utils.refshData(_this)*/
            this.getData(param)
        },
        add: function(){
            this.addConfig.modal = true;
        },
        view: function(item){
            this.detail = item;
            $Vue.nextTick(()=>{
               this.viewConfig.modal = true;
            });
        },
        update: function(params){
            this.detail = params;
            $Vue.nextTick(()=>{
                this.updateConfig.modal = true;
            });
        }
    }
};
</script>
